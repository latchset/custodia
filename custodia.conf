# This config file supports extended interpolations
# https://docs.python.org/3/library/configparser.html#configparser.ExtendedInterpolation
# Environment variables can be references from the ENV section:
#
# Example:
#    [DEFAULT]
#    cafile = 'path/to/ca.pem'
#    [global]
#    tls_cafile = ${DEFAULT:cafile}
#    server_socket = ${ENV:HOME}/server_socket

[global]
server_version = "Secret/0.0.7"
debug = True
#server_url = https://0.0.0.0:10443
tls_certfile = tests/ca/custodia-server.pem
tls_keyfile = tests/ca/custodia-server.key
tls_cafile = tests/ca/custodia-ca.pem
tls_verify_client = true
umask = 027

#[auth:simple]
#handler = custodia.httpd.authenticators.SimpleCredsAuth
#uid = 48
#gid = 48

[auth:header]
handler = custodia.httpd.authenticators.SimpleHeaderAuth
name = REMOTE_USER

[authz:paths]
handler = custodia.httpd.authorizers.SimplePathAuthz
paths = /.

[authz:namespaces]
handler = custodia.httpd.authorizers.UserNameSpace
path = /secrets/
store = simple

[store:simple]
handler = custodia.store.sqlite.SqliteStore
dburi = secrets.db
table = secrets
filemode = 640

[/]
handler = custodia.root.Root
store = simple


# Multi-tenant example
[store:tenant1]
handler = custodia.store.sqlite.SqliteStore
dburi = secrets.db
table = tenant1

[authz:tenant1]
handler = custodia.httpd.authorizers.UserNameSpace
path = /tenant1/secrets/
store = tenant1

[/tenant1/secrets]
handler = custodia.root.Secrets
store = tenant1


# Encstore example
[store:encrypted]
handler = custodia.store.enclite.EncryptedStore
dburi = examples/enclite.db
table = enclite
master_key = examples/enclite.sample.key
master_enctype = A128CBC-HS256

[auth:sak]
handler = custodia.httpd.authenticators.SimpleAuthKeys
store = encrypted
# sample key: test=foo-host-key

[authz:encrypted]
handler = custodia.httpd.authorizers.UserNameSpace
path = /enc/secrets/
store = encrypted

[store:kemkeys]
handler = custodia.store.enclite.EncryptedStore
dburi = examples/enclite.db
table = enclite
master_key = examples/enclite.sample.key
master_enctype = A128CBC-HS256

[authz:kkstore]
handler = custodia.message.kem.KEMKeysStore
path = /enc/secrets/
store = kemkeys

[/enc/secrets]
handler = custodia.root.Secrets
allowed_keytypes = simple kem
store = encrypted

# Forward
[authz:forwarders]
handler = custodia.httpd.authorizers.SimplePathAuthz
paths = /forwarder /forwarder_loop

[/forwarder]
handler = custodia.forwarder.Forwarder
forward_uri = http+unix://%2e%2fserver_socket/secrets
forward_headers = {"CUSTODIA_AUTH_ID": "test", "CUSTODIA_AUTH_KEY": "foo-host-key"}

[/forwarder_loop]
handler = custodia.forwarder.Forwarder
forward_uri = http+unix://%2e%2fserver_socket/forwarder_loop
forward_headers = {"REMOTE_USER": "test"}

# Encgen example
[store:backing]
handler = custodia.store.sqlite.SqliteStore
dburi = examples/enclite.db
table = enclite

[store:overlay]
handler = custodia.store.encgen.EncryptedOverlay
backing_store = backing
master_key = examples/enclite.sample.key
master_enctype = A128CBC-HS256

[authz:kemgen]
handler = custodia.message.kem.KEMKeysStore
path = /encgen/secrets/
store = overlay

